#+OPTIONS: ^:nil

* Tasks
** DONE Create utility for printing my invoices based on note.txt
   This should open note.txt, parse it, and print out an invoice
** DONE Normalize jobs on parsing
   Mcelhose --> mcel, McElhose --> mcel
** TODO Add total to printed invoice for my own expectations of $$
*** DONE Add grand total hours
*** TODO Add wage to config to compute gross pay
** DONE Save invoiced entries to separate file
   Write invoice and invoiced entries to an invoice file
** TODO Add next_paydate() function to invoice
   Returns dt for next payday, has to know some previous payday to
   calculate every second week, or maybe just `if now::week_num % 2`
   because we started invoicing at the end of week 1 in the new year.
** Make config have nothing to do with IO
   Right now it's written around ConfigParser which is disk-specific
   IO. I think it can be rewritten around a dictionary; and so the
   caller picks their data layer and passes it off as a dictionary.
   For now, tests and generating invoices for Ken and FF, the data
   layer will be disk.
